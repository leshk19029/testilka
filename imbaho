-- Функция для определения платформы
local function isMobile()
    return game:GetService("UserInputService").TouchEnabled
end

-- Функция для генерации HWID
local function generateHWID()
    local hwid = ''
    local success, result = pcall(function()
        return game:GetService('RbxAnalyticsService'):GetClientId()
    end)

    if success and result then
        hwid = tostring(result)
    else
        hwid = game:GetService('HttpService'):GenerateGUID(false)
    end
    return hwid
end

-- Функция для отправки ошибок в вебхук
local function sendWebhook(hwid, success, message)
    local request = (syn and syn.request)
        or (http and http.request)
        or http_request
        or (fluxus and fluxus.request)
        or request
    if not request then
        return false
    end

    local statusText = success and 'УСПЕШНЫЙ ВХОД'
        or 'ОШИБКА ДОСТУПА'
    local color = success and 65280 or 16711680

    local webhookData = {
        embeds = {
            {
                title = statusText,
                color = color,
                fields = {
                    {
                        name = 'Игрок',
                        value = game.Players.LocalPlayer.Name,
                        inline = true,
                    },
                    {
                        name = 'User ID',
                        value = tostring(game.Players.LocalPlayer.UserId),
                        inline = true,
                    },
                    { name = 'HWID', value = hwid or 'N/A', inline = false },
                    {
                        name = 'Сообщение',
                        value = message
                            or 'Нет дополнительной информации',
                        inline = false,
                    },
                    {
                        name = 'Время',
                        value = os.date('%Y-%m-%d %H:%M:%S'),
                        inline = true,
                    },
                },
                footer = { text = 'PURY system' },
                timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
            },
        },
    }

    if not success then
        webhookData.content =
            'Попытка несанкционированного доступа'
    end

    local success, result = pcall(function()
        local response = request({
            Url = 'https://discord.com/api/webhooks/1417570852202872838/QLvoA_0YinwQldMgTTHQvoM0r2HlqellWJlzNNlQYSDX4H-0IwMGF8CV4YDOHIzrNhU-',
            Method = 'POST',
            Headers = { ['Content-Type'] = 'application/json' },
            Body = game:GetService('HttpService'):JSONEncode(webhookData),
        })
        return response
    end)

    return success
end

-- Функция для проверки лицензии
local function checkLicense(hwid)
    local databaseUrl =
        'https://raw.githubusercontent.com/leshk19029/sphirit/refs/heads/main/base'

    local success, data = pcall(function()
        return game:HttpGet(databaseUrl)
    end)

    if not success then
        sendWebhook(
            hwid,
            false,
            'Ошибка загрузки базы данных: '
                .. tostring(data)
        )
        return false, 'Ошибка загрузки базы данных'
    end

    local authorizedHWIDs = {}
    for line in data:gmatch('[^\r\n]+') do
        local authorizedHWID = line:match('^%s*(.-)%s*$')
        if authorizedHWID and authorizedHWID ~= '' then
            authorizedHWIDs[authorizedHWID] = true
        end
    end

    if authorizedHWIDs[hwid] then
        return true, 'Доступ разрешен'
    end

    return false, 'HWID не найден в базе'
end

-- Функция для создания GUI с HWID на мобильных устройствах
local function createMobileHWIDGUI(hwid)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "HWIDDisplay"
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0.8, 0, 0.3, 0)
    mainFrame.Position = UDim2.new(0.1, 0, 0.35, 0)
    mainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = mainFrame

    local title = Instance.new("TextLabel")
    title.Text = "HWID Information"
    title.Size = UDim2.new(1, 0, 0.2, 0)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.GothamBold
    title.TextSize = 18
    title.Parent = mainFrame

    local hwidText = Instance.new("TextLabel")
    hwidText.Text = "Your HWID:"
    hwidText.Size = UDim2.new(0.9, 0, 0.2, 0)
    hwidText.Position = UDim2.new(0.05, 0, 0.25, 0)
    hwidText.BackgroundTransparency = 1
    hwidText.TextColor3 = Color3.fromRGB(200, 200, 200)
    hwidText.Font = Enum.Font.Gotham
    hwidText.TextSize = 14
    hwidText.TextXAlignment = Enum.TextXAlignment.Left
    hwidText.Parent = mainFrame

    local hwidValue = Instance.new("TextLabel")
    hwidValue.Text = hwid
    hwidValue.Size = UDim2.new(0.9, 0, 0.2, 0)
    hwidValue.Position = UDim2.new(0.05, 0, 0.45, 0)
    hwidValue.BackgroundTransparency = 1
    hwidValue.TextColor3 = Color3.fromRGB(255, 255, 255)
    hwidValue.Font = Enum.Font.GothamMedium
    hwidValue.TextSize = 16
    hwidValue.TextXAlignment = Enum.TextXAlignment.Left
    hwidValue.TextWrapped = true
    hwidValue.Parent = mainFrame

    local copyButton = Instance.new("TextButton")
    copyButton.Text = "Copy HWID"
    copyButton.Size = UDim2.new(0.9, 0, 0.2, 0)
    copyButton.Position = UDim2.new(0.05, 0, 0.7, 0)
    copyButton.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
    copyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    copyButton.Font = Enum.Font.GothamBold
    copyButton.TextSize = 14
    copyButton.Parent = mainFrame

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = copyButton

    -- Функция копирования в буфер обмена
    copyButton.MouseButton1Click:Connect(function()
        if setclipboard then
            setclipboard(hwid)
            copyButton.Text = "Copied!"
            wait(1)
            copyButton.Text = "Copy HWID"
        else
            copyButton.Text = "Clipboard not supported"
            wait(2)
            copyButton.Text = "Copy HWID"
        end
    end)

    return screenGui
end

-- Основная проверка лицензии
local function performLicenseCheck()
    local HWID = generateHWID()
    local isValid, message = checkLicense(HWID)

    -- Если невалидный и это мобильное устройство - показываем GUI с HWID
    if not isValid and isMobile() then
        createMobileHWIDGUI(HWID)
        sendWebhook(HWID, false, message)
        game.Players.LocalPlayer:Kick('KICKED BY MODERATORS: ' .. message)
        return false
    end

    -- Если невалидный и это ПК - стандартная обработка
    if not isValid then
        sendWebhook(HWID, false, message)
        game.Players.LocalPlayer:Kick('KICKED BY MODERATORS: ' .. message)
        return false
    end

    return true
end

-- Выполняем проверку лицензии перед загрузкой интерфейса
if not performLicenseCheck() then
    return
end

-- Если проверка пройдена, загружаем интерфейс
local Library = loadstring(
    game:HttpGet(
        'https://raw.githubusercontent.com/leshk19029/testilka/refs/heads/main/library'
    )
)()

local SpeedBoostModule = loadstring(
    game:HttpGet(
        'https://raw.githubusercontent.com/leshk19029/testilka/refs/heads/main/speed'
    )
)()

-- Загружаем ESP модуль, но не инициализируем его сразу
local ESPModuleScript = game:HttpGet(
    'https://raw.githubusercontent.com/leshk19029/testilka/refs/heads/main/esp'
)

local AntiEffectsModule = loadstring(
    game:HttpGet(
        'https://raw.githubusercontent.com/leshk19029/testilka/refs/heads/main/antieffects'
    )
)()

local Window = Library:CreateMain({
    projName = 'pury',
    Resizable = true,
    MinSize = UDim2.new(0, 700, 0, 460),
    MaxSize = UDim2.new(0, 1000, 0, 600),
})

local MainTab = Window:CreateCategory('Main')
local MainSection = MainTab:CreateSection('Functions')

-- Anti Effects Toggle
local AntiEffectsToggle = MainSection:Create(
    'Toggle',
    'Anti effects',
    function(state)
        if state then
            AntiEffectsModule()
        end
    end,
    {
        default = false,
    }
)

-- Speed Boost Toggle
local SpeedBoostToggle = MainSection:Create(
    'Toggle',
    'Speed Boost',
    function(state)
        SpeedBoostModule:SetEnabled(state)
    end,
    {
        default = false,
    }
)

-- Speed Value Slider
local SpeedSlider = MainSection:Create('Slider', 'Speed value', function(value)
    SpeedBoostModule:SetSpeed(value)
    if SpeedBoostModule.Enabled then
        SpeedBoostModule:Disable()
        SpeedBoostModule:Enable()
    end
end, {
    min = 1,
    max = 45,
    default = 16,
    precise = true,
})

-- ESP Toggle с ленивой загрузкой
local ESPModule = nil
local espLoaded = false
local ESPToggle = MainSection:Create('Toggle', 'ESP', function(state)
    if state and not espLoaded then
        -- Загружаем ESP модуль только при первом включении
        ESPModule = loadstring(ESPModuleScript)()
        espLoaded = true
    end

    if espLoaded then
        ESPModule.ToggleAll(state)
    end
end, {
    default = false,
})

-- Float Toggle (ленивая загрузка)
local FloatModule = nil
local floatLoaded = false
local FloatToggle = MainSection:Create('Toggle', 'Float', function(state)
    if state and not floatLoaded then
        FloatModule = loadstring(
            game:HttpGet(
                'https://raw.githubusercontent.com/leshk19029/testilka/refs/heads/main/gravity'
            )
        )()
        floatLoaded = true
    end

    if floatLoaded then
        FloatModule:Toggle(state)
    end
end, {
    default = false,
})

-- FPS Devouver Toggle (ленивая загрузка)
local FPSDevouverModule = nil
local fpsDevouverLoaded = false
local FPSDevouverToggle = MainSection:Create(
    'Toggle',
    'FPS devouver',
    function(state)
        if state and not fpsDevouverLoaded then
            FPSDevouverModule = loadstring(
                game:HttpGet(
                    'https://raw.githubusercontent.com/leshk19029/testilka/refs/heads/main/fps'
                )
            )()
            fpsDevouverLoaded = true
        end

        if fpsDevouverLoaded then
            FPSDevouverModule:Toggle(state)
        end
    end,
    {
        default = false,
    }
)

-- Invisibility Steal Toggle - только управление видимостью UI модуля
local InvisibilityStealModule = nil
local invisibilityLoaded = false
local InvisibilityToggle = MainSection:Create(
    'Toggle',
    'Invisibility steal',
    function(state)
        if state and not invisibilityLoaded then
            -- Загружаем Invisibility Steal модуль с GitHub
            local success, module = pcall(function()
                return loadstring(
                    game:HttpGet(
                        'https://drive.google.com/uc?export=download&id=1qd-0Fpdg9Fxa-4YV2z5EQG8ClSEw1Uij'
                    )
                )()
            end)

            if success then
                InvisibilityStealModule = module
                invisibilityLoaded = true
                -- Показываем UI модуля
                if InvisibilityStealModule.ShowUI then
                    InvisibilityStealModule:ShowUI()
                end
            else
                InvisibilityToggle:SetState(false)
            end
        else
            if InvisibilityStealModule then
                -- Управляем только видимостью UI модуля
                if InvisibilityStealModule.ToggleUI then
                    InvisibilityStealModule:ToggleUI(state)
                elseif
                    InvisibilityStealModule.ShowUI
                    and InvisibilityStealModule.HideUI
                then
                    if state then
                        InvisibilityStealModule:ShowUI()
                    else
                        InvisibilityStealModule:HideUI()
                    end
                end
            end
        end
    end,
    {
        default = false,
    }
)

-- Web Control Toggle (ленивая загрузка)
local WebControlModule = nil
local webControlLoaded = false
local webControlScreenGui = nil
local lastWebControlPosition = UDim2.new(0, 10, 0, 15) -- Позиция по умолчанию

local WebControlToggle = MainSection:Create(
    'Toggle',
    'Web control',
    function(state)
        if state and not webControlLoaded then
            -- Загружаем Web Control модуль с GitHub
            local success, module = pcall(function()
                return loadstring(
                    game:HttpGet(
                        'https://drive.google.com/uc?export=download&id=1fYeGCKw4g8ouy0QTN3-V2cAysuNEFKaF'
                    )
                )()
            end)
            if success then
                WebControlModule = module
                webControlLoaded = true

                -- Сохраняем ссылку на ScreenGui для управления видимостью
                local player = game:GetService('Players').LocalPlayer
                webControlScreenGui =
                    player.PlayerGui:FindFirstChild('ControlPlayerMenu')

                if webControlScreenGui then
                    -- Восстанавливаем последнюю позицию
                    webControlScreenGui.MainContainer.Position =
                        lastWebControlPosition
                    webControlScreenGui.Enabled = true
                end
            else
                WebControlToggle:SetState(false)
            end
        else
            if webControlScreenGui then
                -- Сохраняем текущую позицию перед скрытием
                lastWebControlPosition =
                    webControlScreenGui.MainContainer.Position
                webControlScreenGui.Enabled = state
            elseif WebControlModule and webControlLoaded then
                -- Если ScreenGui был уничтожен, пересоздаем его
                local player = game:GetService('Players').LocalPlayer
                webControlScreenGui =
                    player.PlayerGui:FindFirstChild('ControlPlayerMenu')

                if webControlScreenGui then
                    webControlScreenGui.MainContainer.Position =
                        lastWebControlPosition
                    webControlScreenGui.Enabled = state
                else
                    -- Пересоздаем интерфейс
                    WebControlModule = loadstring(
                        game:HttpGet(
                            'https://raw.githubusercontent.com/leshk19029/testilka/refs/heads/main/webcontrol'
                        )
                    )()
                    webControlScreenGui =
                        player.PlayerGui:FindFirstChild('ControlPlayerMenu')
                    if webControlScreenGui then
                        webControlScreenGui.MainContainer.Position =
                            lastWebControlPosition
                    end
                end
            end
        end
    end,
    {
        default = false,
    }
)

-- Функция для сохранения позиции Web Control
local function saveWebControlPosition()
    if webControlScreenGui and webControlScreenGui.Enabled then
        lastWebControlPosition = webControlScreenGui.MainContainer.Position
    end
end

-- Периодически сохраняем позицию
spawn(function()
    while true do
        wait(5)
        saveWebControlPosition()
    end
end)

-- Сохраняем позицию при изменении
if webControlScreenGui then
    webControlScreenGui.MainContainer
        :GetPropertyChangedSignal('Position')
        :Connect(function()
            saveWebControlPosition()
        end)
end
