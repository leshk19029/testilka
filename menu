local Zypher = loadstring(game:HttpGet("https://raw.githubusercontent.com/leshk19029/testilka/refs/heads/main/library"))()

-- Создаем экземпляр библиотеки
local Library = Zypher.new("Zypher Menu", Enum.KeyCode.RightShift, Color3.fromRGB(65, 105, 225))

-- Создаем перетаскиваемый круг
local function CreateDragCircle()
    local UserInputService = game:GetService("UserInputService")
    local RunService = game:GetService("RunService")
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    
    -- Создаем отдельный ScreenGui для круга
    local CircleGui = Instance.new("ScreenGui")
    CircleGui.Name = "DragCircleGui"
    CircleGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    CircleGui.ResetOnSpawn = false
    CircleGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    CircleGui.IgnoreGuiInset = true
    
    -- Создаем круг
    local DragCircle = Instance.new("Frame")
    DragCircle.Name = "DragCircle"
    DragCircle.Size = UDim2.new(0, 60, 0, 60)
    DragCircle.Position = UDim2.new(0, 20, 0, 20)
    DragCircle.BackgroundColor3 = Color3.fromRGB(65, 105, 225)
    DragCircle.BackgroundTransparency = 0.3
    DragCircle.BorderSizePixel = 0
    DragCircle.ZIndex = 1000
    DragCircle.Active = true
    DragCircle.Selectable = true
    DragCircle.ClipsDescendants = true
    
    -- Делаем круг круглым
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(1, 0)
    UICorner.Parent = DragCircle
    
    -- Добавляем тень
    local UIStroke = Instance.new("UIStroke")
    UIStroke.Color = Color3.fromRGB(255, 255, 255)
    UIStroke.Thickness = 2
    UIStroke.Transparency = 0.5
    UIStroke.Parent = DragCircle
    
    -- Добавляем иконку меню
    local MenuIcon = Instance.new("TextLabel")
    MenuIcon.Name = "MenuIcon"
    MenuIcon.Size = UDim2.new(1, 0, 1, 0)
    MenuIcon.Position = UDim2.new(0, 0, 0, 0)
    MenuIcon.BackgroundTransparency = 1
    MenuIcon.Text = "≡"
    MenuIcon.TextColor3 = Color3.fromRGB(255, 255, 255)
    MenuIcon.TextSize = 24
    MenuIcon.Font = Enum.Font.GothamBold
    MenuIcon.ZIndex = 1001
    MenuIcon.Parent = DragCircle
    
    -- Эффект нажатия
    local UIScale = Instance.new("UIScale")
    UIScale.Parent = DragCircle
    
    -- Добавляем в интерфейс
    DragCircle.Parent = CircleGui
    
    -- Переменные для перетаскивания
    local isDragging = false
    local dragStart = nil
    local startPos = nil
    local isMobile = UserInputService.TouchEnabled and not UserInputService.MouseEnabled
    
    -- Функция для анимации нажатия
    local function animatePress(isPressed)
        if isPressed then
            -- Плавная анимация
            local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            local scaleTween = TweenService:Create(UIScale, tweenInfo, {Scale = 0.8})
            local transparencyTween = TweenService:Create(DragCircle, tweenInfo, {BackgroundTransparency = 0.1})
            
            scaleTween:Play()
            transparencyTween:Play()
        else
            -- Плавное возвращение
            local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            local scaleTween = TweenService:Create(UIScale, tweenInfo, {Scale = 1})
            local transparencyTween = TweenService:Create(DragCircle, tweenInfo, {BackgroundTransparency = 0.3})
            
            scaleTween:Play()
            transparencyTween:Play()
        end
    end
    
    -- Обработка ввода для компьютера
    if not isMobile then
        DragCircle.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                animatePress(true)
                isDragging = true
                dragStart = input.Position
                startPos = DragCircle.Position
                
                local connection
                connection = input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        isDragging = false
                        animatePress(false)
                        connection:Disconnect()
                    end
                end)
            end
        end)
        
        DragCircle.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement and isDragging then
                local delta = input.Position - dragStart
                DragCircle.Position = UDim2.new(
                    startPos.X.Scale, 
                    startPos.X.Offset + delta.X,
                    startPos.Y.Scale, 
                    startPos.Y.Offset + delta.Y
                )
            end
        end)
        
        DragCircle.MouseButton1Click:Connect(function()
            Library:Toggle()
        end)
        
        DragCircle.MouseEnter:Connect(function()
            UIStroke.Transparency = 0.2
        end)
        
        DragCircle.MouseLeave:Connect(function()
            UIStroke.Transparency = 0.5
        end)
        
    else
        -- Обработка ввода для мобильных устройств
        local touchStartTime = 0
        local touchStartPos = nil
        local isTouchDragging = false
        
        -- Делаем кнопку более удобной для касаний
        DragCircle.Size = UDim2.new(0, 70, 0, 70) -- Увеличиваем для мобильных
        
        DragCircle.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.Touch then
                touchStartTime = tick()
                touchStartPos = input.Position
                isTouchDragging = false
                animatePress(true)
                
                local connection
                connection = input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        local touchDuration = tick() - touchStartTime
                        
                        -- Если было короткое нажатие (не перетаскивание) - открываем меню
                        if not isTouchDragging and touchDuration < 0.3 then
                            Library:Toggle()
                        end
                        
                        animatePress(false)
                        connection:Disconnect()
                    end
                end)
            end
        end)
        
        DragCircle.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.Touch then
                local currentPos = input.Position
                if touchStartPos then
                    local delta = (currentPos - touchStartPos).Magnitude
                    
                    -- Если перемещение больше 15 пикселей - считаем это перетаскиванием
                    if delta > 15 then
                        isTouchDragging = true
                        
                        local deltaPos = currentPos - touchStartPos
                        DragCircle.Position = UDim2.new(
                            DragCircle.Position.X.Scale, 
                            DragCircle.Position.X.Offset + deltaPos.X,
                            DragCircle.Position.Y.Scale, 
                            DragCircle.Position.Y.Offset + deltaPos.Y
                        )
                        
                        touchStartPos = currentPos
                    end
                end
            end
        end)
    end
    
    -- Функция для обеспечения видимости круга в пределах экрана
    local function ensureVisibility()
        local screenSize = workspace.CurrentCamera.ViewportSize
        local circleSize = DragCircle.AbsoluteSize
        local currentPos = DragCircle.Position
        
        local minX = 0
        local maxX = screenSize.X - circleSize.X
        local minY = 0
        local maxY = screenSize.Y - circleSize.Y
        
        local newX = math.clamp(currentPos.X.Offset, minX, maxX)
        local newY = math.clamp(currentPos.Y.Offset, minY, maxY)
        
        if newX ~= currentPos.X.Offset or newY ~= currentPos.Y.Offset then
            DragCircle.Position = UDim2.new(currentPos.X.Scale, newX, currentPos.Y.Scale, newY)
        end
    end
    
    -- Периодическая проверка видимости
    local visibilityConnection
    visibilityConnection = RunService.Heartbeat:Connect(function()
        if DragCircle and DragCircle.Parent then
            ensureVisibility()
        else
            visibilityConnection:Disconnect()
        end
    end)
    
    -- Функция для скрытия/показа круга при открытии/закрытии меню
    Library.MainFrame:GetPropertyChangedSignal("Visible"):Connect(function()
        if Library.MainFrame.Visible then
            DragCircle.Visible = false
        else
            DragCircle.Visible = true
        end
    end)
    
    -- Автоматическое скрытие при смерти/респавне
    LocalPlayer.CharacterAdded:Connect(function()
        if DragCircle then
            DragCircle.Visible = true
        end
    end)
    
    return DragCircle
end

-- Создаем круг (добавляем небольшую задержку для гарантии загрузки)
task.wait(1)
local DragCircle = CreateDragCircle()

-- Теперь создаем меню
local MainTab = Library:CreateTab("Main")
local CombatTab = Library:CreateTab("Combat")
local VisualsTab = Library:CreateTab("Visuals")

-- Главная вкладка
Library:CreateLabel(MainTab, "Drag Circle Menu!")
Library:CreateButton(MainTab, "Test Button", function()
    print("Button clicked!")
end)

Library:CreateToggle(MainTab, "Example Toggle", false, function(value)
    print("Toggle:", value)
end)

Library:CreateSlider(MainTab, "Example Slider", 0, 100, 50, function(value)
    print("Slider value:", value)
end)

-- Вкладка Combat
Library:CreateToggle(CombatTab, "Aimbot", false, function(value)
    print("Aimbot:", value and "Enabled" or "Disabled")
end)

Library:CreateToggle(CombatTab, "Wallhack", false, function(value)
    print("Wallhack:", value and "Enabled" or "Disabled")
end)

-- Вкладка Visuals
Library:CreateToggle(VisualsTab, "ESP", false, function(value)
    print("ESP:", value and "Enabled" or "Disabled")
end)

Library:CreateToggle(VisualsTab, "Fullbright", false, function(value)
    if value then
        game.Lighting.Ambient = Color3.new(1, 1, 1)
        game.Lighting.FogEnd = 100000
    else
        game.Lighting.Ambient = Color3.new(0.5, 0.5, 0.5)
        game.Lighting.FogEnd = 1000
    end
    print("Fullbright:", value and "Enabled" or "Disabled")
end)

print("Drag Circle Menu loaded! Use the blue circle to open/close menu.")
