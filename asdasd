local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/leshk19029/testilka/refs/heads/main/library"))()

local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Настройки
local FLY_SPEED = 30
local FALL_SPEED = 2
local MAX_HEIGHT_GAIN = 21.8
local isFlying = false
local heightLimitEnabled = false
local initialYPosition = 0
local currentHeightGain = 0
local scriptActive = true
local flightEnabled = false

-- Создаем главное окно
local Window = Library:CreateMain({
    projName = "Flight Control",
    Resizable = true,
    MinSize = UDim2.new(0, 400, 0, 300),
    MaxSize = UDim2.new(0, 600, 0, 500)
})

-- Создаем категории
local MainTab = Window:CreateCategory("Основные настройки")
local SettingsTab = Window:CreateCategory("Дополнительно")

-- Создаем секции
local FlightSection = MainTab:CreateSection("Управление полётом")
local HeightSection = MainTab:CreateSection("Ограничения высоты")
local InfoSection = SettingsTab:CreateSection("Информация")
local SettingsSection = SettingsTab:CreateSection("Настройки")

-- Переменные для элементов UI
local FlightToggle
local HeightToggle
local HeightLabel
local MaxHeightSlider

-- Функция сброса скорости
local function resetVelocity()
    if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
        Player.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
    end
end

-- Функция для полного выключения скрипта
local function disableScript()
    scriptActive = false
    flightEnabled = false
    resetVelocity()
    
    -- Отключаем все соединения
    for _, connection in pairs(getconnections(UIS.InputBegan)) do
        connection:Disable()
    end
    for _, connection in pairs(getconnections(UIS.InputEnded)) do
        connection:Disable()
    end
    for _, connection in pairs(getconnections(RunService.Heartbeat)) do
        connection:Disable()
    end
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Скрипт выключен",
        Text = "Все функции отключены",
        Duration = 3
    })
end

-- Основная функция полёта
local function fly()
    if not scriptActive or not flightEnabled then 
        return 
    end
    
    if not Player.Character then return end
    
    local root = Player.Character:FindFirstChild("HumanoidRootPart")
    if not root then return end
    
    -- Обновляем отображение высоты
    local currentY = math.floor(root.Position.Y * 10) / 10
    HeightLabel:SetText("Текущая высота: "..tostring(currentY))
    
    if isFlying then
        if heightLimitEnabled then
            -- Проверяем максимальную высоту
            if currentHeightGain < MAX_HEIGHT_GAIN then
                local remainingGain = MAX_HEIGHT_GAIN - currentHeightGain
                local actualSpeed = math.min(FLY_SPEED, remainingGain * 10)
                root.Velocity = Vector3.new(root.Velocity.X, actualSpeed, root.Velocity.Z)
                currentHeightGain = currentHeightGain + (actualSpeed * RunService.Heartbeat:Wait())
            else
                root.Velocity = Vector3.new(root.Velocity.X, 0, root.Velocity.Z)
            end
        else
            -- Без ограничения высоты
            root.Velocity = Vector3.new(root.Velocity.X, FLY_SPEED, root.Velocity.Z)
        end
    else
        -- Медленно падаем вниз
        root.Velocity = Vector3.new(root.Velocity.X, -FALL_SPEED, root.Velocity.Z)
        currentHeightGain = 0
    end
end

-- Создаем элементы UI
FlightToggle = FlightSection:Create("Toggle", "Включить полёт", function(state)
    flightEnabled = state
    if state then
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Полёт включён",
            Text = "Нажмите ПРОБЕЛ для полёта",
            Duration = 2
        })
    else
        resetVelocity()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Полёт выключен",
            Text = "Движение возвращено к стандартному",
            Duration = 2
        })
    end
end, {default = false})

HeightToggle = HeightSection:Create("Toggle", "Ограничение высоты", function(state)
    heightLimitEnabled = state
end, {default = false})

MaxHeightSlider = HeightSection:Create("Slider", "Максимальный подъём", function(value)
    MAX_HEIGHT_GAIN = value
end, {min = 5, max = 50, default = 21.8, precise = true})

HeightLabel = InfoSection:Create("TextLabel", "Текущая высота: 0")

local FlySpeedSlider = SettingsSection:Create("Slider", "Скорость полёта", function(value)
    FLY_SPEED = value
end, {min = 10, max = 100, default = 30, precise = false})

local FallSpeedSlider = SettingsSection:Create("Slider", "Скорость падения", function(value)
    FALL_SPEED = value
end, {min = 1, max = 10, default = 2, precise = false})

SettingsSection:Create("Button", "Выключить скрипт", function()
    disableScript()
end, {animated = true})

-- Обработка нажатия пробела
UIS.InputBegan:Connect(function(input)
    if not scriptActive or not flightEnabled then return end
    if input.KeyCode == Enum.KeyCode.Space then
        isFlying = true
        if heightLimitEnabled then
            if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                initialYPosition = Player.Character.HumanoidRootPart.Position.Y
                currentHeightGain = 0
            end
        end
    end
end)

-- Обработка отпускания пробела
UIS.InputEnded:Connect(function(input)
    if not scriptActive or not flightEnabled then return end
    if input.KeyCode == Enum.KeyCode.Space then
        isFlying = false
    end
end)

-- Главный цикл
RunService.Heartbeat:Connect(function()
    if flightEnabled then
        fly()
    end
end)

-- Уведомление при старте
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Flight Control загружен",
    Text = "Функция полёта по умолчанию ВЫКЛЮЧЕНА\nВключите её в интерфейсе",
    Duration = 5
})
