
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid", 10)
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart", 10)

-- Настройки
local IS_ACTIVE = true
local originalPosition = HumanoidRootPart.Position

-- UI: меню с кнопками
local function createUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "BrainrotUI"
    screenGui.Parent = PlayerGui
    screenGui.IgnoreGuiInset = true

    local frame = Instance.new("Frame")
    frame.Name = "BrainrotFrame"
    frame.Parent = screenGui
    frame.Size = UDim2.new(0, 230, 0, 120)
    frame.Position = UDim2.new(0, 10, 0, 10)
    frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    frame.BackgroundTransparency = 0.15
    frame.BorderSizePixel = 0
    frame.Active = true
    frame.Draggable = true

    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Parent = frame
    title.Size = UDim2.new(1, 0, 0, 28)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "Brainrot Ultimate Anti-Hit"
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.TextXAlignment = Enum.TextXAlignment.Left

    local statusLabel = Instance.new("TextLabel")
    statusLabel.Name = "StatusLabel"
    statusLabel.Parent = frame
    statusLabel.Size = UDim2.new(1, -20, 0, 20)
    statusLabel.Position = UDim2.new(0, 10, 0, 32)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "Status: On"
    statusLabel.TextColor3 = Color3.new(1, 1, 1)
    statusLabel.TextScaled = true
    statusLabel.Font = Enum.Font.SourceSans

    local toggleBtn = Instance.new("TextButton")
    toggleBtn.Name = "ToggleButton"
    toggleBtn.Parent = frame
    toggleBtn.Size = UDim2.new(0, 150, 0, 40)
    toggleBtn.Position = UDim2.new(0.5, -75, 0, 60)
    toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
    toggleBtn.TextColor3 = Color3.new(1, 1, 1)
    toggleBtn.Text = "Turn Off"
    toggleBtn.Font = Enum.Font.SourceSansBold
    toggleBtn.TextScaled = true
    toggleBtn.BorderSizePixel = 0

    local closeBtn = Instance.new("TextButton")
    closeBtn.Name = "CloseButton"
    closeBtn.Parent = frame
    closeBtn.Size = UDim2.new(0, 20, 0, 20)
    closeBtn.Position = UDim2.new(1, -22, 0, 2)
    closeBtn.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    closeBtn.Text = "X"
    closeBtn.TextColor3 = Color3.new(1, 1, 1)
    closeBtn.TextScaled = true
    closeBtn.Font = Enum.Font.SourceSansBold
    closeBtn.BorderSizePixel = 0

    local function setActive(state)
        IS_ACTIVE = state
        if IS_ACTIVE then
            toggleBtn.Text = "Turn Off"
            statusLabel.Text = "Status: On"
            toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
            startRunMode()
        else
            toggleBtn.Text = "Turn On"
            statusLabel.Text = "Status: Off"
            toggleBtn.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
            stopRunMode()
        end
    end

    toggleBtn.MouseButton1Click:Connect(function()
        setActive(not IS_ACTIVE)
    end)

    closeBtn.MouseButton1Click:Connect(function()
        frame.Visible = not frame.Visible
    end)

    return {
        UI = screenGui,
        Frame = frame,
        ToggleButton = toggleBtn,
        StatusLabel = statusLabel
    }
end

-- Функция: выбор точки в пределах 30 studs
local function findFreezePosition()
    if not HumanoidRootPart then return nil end
    local origin = HumanoidRootPart.Position
    local originY = origin.Y
    local params = RaycastParams.new()
    params.FilterType = Enum.RaycastFilterType.Blacklist
    if Character then
        params.FilterDescendantsInstances = {Character}
    end

    for _ = 1, 20 do
        local angle = math.rad(math.random(0, 360))
        local radius = math.random() * 30
        local x = origin.X + math.cos(angle) * radius
        local z = origin.Z + math.sin(angle) * radius
        local start = Vector3.new(x, originY + 20, z)
        local dir = Vector3.new(0, -50, 0)
        local hit = Workspace:Raycast(start, dir, params)
        if hit and hit.Position then
            return hit.Position
        end
    end
    return origin
end

-- Удаленная авто-заморозка: здесь ручной режим
local function startRunMode()
    if not Humanoid or not HumanoidRootPart or not Character.Parent then return end

    originalPosition = HumanoidRootPart.Position

    -- Ручная заморозка: фиксируем позу и отключаем движение
    HumanoidRootPart.Anchored = true
    Humanoid.WalkSpeed = 0
    Humanoid.JumpPower = 0

    print("Run mode activated: заморозка и отключение движений включены")
end

local function stopRunMode()
    if not Humanoid or not HumanoidRootPart or not Character.Parent then return end

    HumanoidRootPart.Anchored = false
    Humanoid.WalkSpeed = 16
    Humanoid.JumpPower = 50

    print("Run mode deactivated")
end

-- Фиксация позиции во время кадра
RunService.Heartbeat:Connect(function()
    if IS_ACTIVE and HumanoidRootPart and HumanoidRootPart.Parent then
        HumanoidRootPart.CFrame = CFrame.new(originalPosition)
        HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
        HumanoidRootPart.RotVelocity = Vector3.new(0, 0, 0)
    end
end)

-- Инициализация UI
local ui = createUI()

-- Инициализация состояния: запуск при включенном состоянии
task.delay(0.2, function()
    if IS_ACTIVE then
        startRunMode()
    end
end)

-- Обработчик респауна
local function onCharacterAdded(newCharacter)
    Character = newCharacter
    task.wait(1)
    Humanoid = Character:WaitForChild("Humanoid", 10)
    HumanoidRootPart = Character:WaitForChild("HumanoidRootPart", 10)

    if IS_ACTIVE then
        task.delay(0.5, function()
            startRunMode()
        end)
    end
end

LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
