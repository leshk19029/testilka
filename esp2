–ü—Ä–æ—Å—Ç–∏ –∑–∞ –ø—É—Ç–∞–Ω–∏—Ü—É. –ù–∏–∂–µ –≤–µ—Å—å –∫–æ–¥ –∫–∞–∫ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π Lua-—Å–∫—Ä–∏–ø—Ç (—á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Ç–µ–∫—Å—Ç–∞ —Ä—è–¥–æ–º —Å –∫–æ–¥–æ–º). –≠—Ç–æ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–µ–∞–ª–∏–∑—É–µ—Ç Hold-to-Activate —Å draggable UI –∏ –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–∏ –±–µ–≥–∞.

```lua
-- Brainrot Ultimate Anti-Hit: Hold-to-Activate + Movable UI (Lua)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local Backpack = player:WaitForChild("Backpack")
local PlayerGui = player:WaitForChild("PlayerGui")

local Character = player.Character or player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid", 10)
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart", 10)

-- Config
local IS_ACTIVE = false
local animTrack = nil -- –∞–Ω–∏–º–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞; –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

-- Anti-hit state
local hitboxDisabled = false
local originalProperties = {}

-- UI
local panel, holdButton

-- Positioning
local originalPosition = HumanoidRootPart.Position
local targetPosition = originalPosition -- –±—É–¥–µ—Ç —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏

-- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤ —á–∞—Å—Ç–µ–π
local function saveOriginalProperties()
    originalProperties = {}
    for _, part in ipairs(Character:GetDescendants()) do
        if part:IsA("BasePart") then
            originalProperties[part] = {
                CanCollide = part.CanCollide,
                CanTouch = part.CanTouch,
                CanQuery = part.CanQuery,
                Transparency = part.Transparency
            }
        end
    end
end

-- –í–∫–ª—é—á–∞–µ–º –∞–Ω—Ç–∏—Ö–∏—Ç
local function enableAntiHit()
    if hitboxDisabled then return end

    saveOriginalProperties()

    for _, part in ipairs(Character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
            part.CanTouch = false
            part.CanQuery = false
            part.Transparency = 0.5
            part.Velocity = Vector3.new(0, 0, 0)
            part.RotVelocity = Vector3.new(0, 0, 0)
        end
    end

    HumanoidRootPart.Anchored = true

    hitboxDisabled = true
    print("üõ°Ô∏è –ê–Ω—Ç–∏—Ö–∏—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω: –∫–æ–ª–ª–∏–∑–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã")
end

-- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
local function disableAntiHit()
    if not hitboxDisabled then return end

    for part, props in pairs(originalProperties) do
        if part and part.Parent then
            part.CanCollide = props.CanCollide
            part.CanTouch = props.CanTouch
            part.CanQuery = props.CanQuery
            part.Transparency = props.Transparency
        end
    end

    HumanoidRootPart.Anchored = false

    hitboxDisabled = false
    print("üõ°Ô∏è –ê–Ω—Ç–∏—Ö–∏—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
end

-- –£–¥–∞–ª–µ–Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—è –±–µ–≥–∞

-- –ó–∞–ø—É—Å–∫ —Ä–µ–∂–∏–º–∞ Hold-to-Activate
local function startRunMode()
    if not Humanoid or not HumanoidRootPart or not Character.Parent then return end

    originalPosition = HumanoidRootPart.Position
    targetPosition = originalPosition + (HumanoidRootPart.CFrame.LookVector * 5)

    enableAntiHit()

    Humanoid.WalkSpeed = 0
    Humanoid.JumpPower = 0

    HumanoidRootPart.Anchored = true

    IS_ACTIVE = true
    if holdButton then holdButton.Text = "Brainrot: ON (hold)" end
    print("Brainrot –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω: –¥–µ—Ä–∂–∏—Ç–µ—Å—å –≤ –Ω–æ–≤–æ–º –º–µ—Å—Ç–µ")
end

-- –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∂–∏–º–∞
local function stopRunMode()
    if not Humanoid or not HumanoidRootPart or not Character.Parent then return end

    disableAntiHit()

    Humanoid.WalkSpeed = 16
    Humanoid.JumpPower = 50

    HumanoidRootPart.Anchored = false

    IS_ACTIVE = false
    local pos = originalPosition
    if HumanoidRootPart then
        HumanoidRootPart.CFrame = CFrame.new(pos)
        HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
        HumanoidRootPart.RotVelocity = Vector3.new(0, 0, 0)
    end

    if holdButton then holdButton.Text = "Brainrot: OFF (hold)" end
    print("Brainrot –æ—Ç–∫–ª—é—á–µ–Ω")
end

local function updateUI()
    if holdButton then
        holdButton.Text = IS_ACTIVE and "Brainrot: ON (hold)" or "Brainrot: OFF (hold)"
    end
end

local function makePanelDraggable(p)
    local dragging = false
    local dragStart = Vector2.new()
    local panelStart = p.Position

    p.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = Vector2.new(input.Position.X, input.Position.Y)
            panelStart = p.Position
        end
    end)

    p.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = Vector2.new(input.Position.X - dragStart.X, input.Position.Y - dragStart.Y)
            p.Position = UDim2.new(
                panelStart.X.Scale, panelStart.X.Offset + delta.X,
                panelStart.Y.Scale, panelStart.Y.Offset + delta.Y
            )
        end
    end)
end

local function createUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "BrainrotUI"
    screenGui.Parent = PlayerGui
    screenGui.ResetOnSpawn = false

    panel = Instance.new("Frame")
    panel.Name = "BrainrotPanel"
    panel.Parent = screenGui
    panel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    panel.BackgroundTransparency = 0.15
    panel.Size = UDim2.new(0, 220, 0, 100)
    panel.Position = UDim2.new(0.5, -110, 0.5, -50)

    local title = Instance.new("TextLabel")
    title.Parent = panel
    title.Size = UDim2.new(1, 0, 0, 20)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "Brainrot Controller"
    title.TextColor3 = Color3.new(1, 1, 1)
    title.Font = Enum.Font.SourceSansBold
    title.TextScaled = true

    holdButton = Instance.new("TextButton")
    holdButton.Name = "HoldButton"
    holdButton.Parent = panel
    holdButton.Size = UDim2.new(0, 180, 0, 50)
    holdButton.Position = UDim2.new(0.5, -90, 0.5, 25)
    holdButton.AnchorPoint = Vector2.new(0.5, 0)
    holdButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    holdButton.TextColor3 = Color3.new(1, 1, 1)
    holdButton.Text = "Brainrot: OFF (hold)"
    holdButton.Font = Enum.Font.SourceSans
    holdButton.TextScaled = true

    makePanelDraggable(panel)

    screenGui.Parent = PlayerGui
end

local function connectUIEvents()
    if holdButton then
        holdButton.MouseButton1Down:Connect(function()
            if not IS_ACTIVE then
                startRunMode()
                updateUI()
            end
        end)
    end

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            if IS_ACTIVE then
                stopRunMode()
                updateUI()
            end
        end
    end)
end

local function onCharacterAdded(newCharacter)
    Character = newCharacter
    Humanoid = Character:WaitForChild("Humanoid", 10)
    HumanoidRootPart = Character:WaitForChild("HumanoidRootPart", 10)
    originalPosition = HumanoidRootPart.Position
    hitboxDisabled = false
    if IS_ACTIVE then
        startRunMode()
        updateUI()
    end
end

createUI()
updateUI()
connectUIEvents()

player.CharacterAdded:Connect(onCharacterAdded)
if Character then
    onCharacterAdded(Character)
end

RunService.Heartbeat:Connect(function()
    if IS_ACTIVE and HumanoidRootPart and HumanoidRootPart.Parent then
        local look = HumanoidRootPart.CFrame.LookVector
        targetPosition = originalPosition + (look * 5)
        HumanoidRootPart.CFrame = CFrame.new(targetPosition)
        HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
        HumanoidRootPart.RotVelocity = Vector3.new(0, 0, 0)
    end
end)
```
