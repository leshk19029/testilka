-- Библиотека UI компонентов с функцией перетаскивания
local Library = {}

-- Цвета библиотеки
Library.Colors = {
    Background = Color3.fromRGB(40, 40, 40),
    Secondary = Color3.fromRGB(30, 30, 30),
    Accent = Color3.fromRGB(25, 25, 25),
    Text = Color3.fromRGB(255, 255, 255),
    Button = Color3.fromRGB(60, 60, 60),
    ButtonHover = Color3.fromRGB(70, 70, 70),
    ToggleOn = Color3.fromRGB(0, 170, 255),
    ToggleOff = Color3.fromRGB(80, 80, 80),
    Border = Color3.fromRGB(60, 60, 60)
}

-- Функция перетаскивания для окон и элементов
function Library:Draggable(frame, handle)
    handle = handle or frame
    
    local dragging = false
    local dragInput, dragStart, startPos

    -- Обработчик для мыши
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    -- Обработчик для касаний
    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    -- Обновление позиции
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- Создание фрейма окна
function Library:CreateWindow(name)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = name
    screenGui.Parent = game:GetService("CoreGui")
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 400, 0, 300)
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
    mainFrame.BackgroundColor3 = Library.Colors.Background
    mainFrame.BorderColor3 = Library.Colors.Border
    mainFrame.BorderSizePixel = 1
    mainFrame.Parent = screenGui

    -- Заголовок окна
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = Library.Colors.Secondary
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame

    local titleText = Instance.new("TextLabel")
    titleText.Name = "Title"
    titleText.Size = UDim2.new(1, -60, 1, 0)
    titleText.Position = UDim2.new(0, 10, 0, 0)
    titleText.BackgroundTransparency = 1
    titleText.Text = name
    titleText.TextColor3 = Library.Colors.Text
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.Font = Enum.Font.Gotham
    titleText.TextSize = 14
    titleText.Parent = titleBar

    -- Делаем окно перетаскиваемым за заголовок
    Library:Draggable(mainFrame, titleBar)

    -- Контейнер для элементов
    local container = Instance.new("ScrollingFrame")
    container.Name = "Container"
    container.Size = UDim2.new(1, -20, 1, -50)
    container.Position = UDim2.new(0, 10, 0, 40)
    container.BackgroundTransparency = 1
    container.BorderSizePixel = 0
    container.ScrollBarThickness = 5
    container.AutomaticCanvasSize = Enum.AutomaticSize.Y
    container.CanvasSize = UDim2.new(0, 0, 0, 0)
    container.Parent = mainFrame

    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 10)
    layout.Parent = container

    return {
        ScreenGui = screenGui,
        MainFrame = mainFrame,
        Container = container,
        TitleBar = titleBar
    }
end

-- Создание кнопки
function Library:CreateButton(parent, text, callback)
    local button = Instance.new("TextButton")
    button.Name = "Button"
    button.Size = UDim2.new(1, 0, 0, 35)
    button.BackgroundColor3 = Library.Colors.Button
    button.BorderColor3 = Library.Colors.Border
    button.BorderSizePixel = 1
    button.Text = text
    button.TextColor3 = Library.Colors.Text
    button.Font = Enum.Font.Gotham
    button.TextSize = 14
    button.Parent = parent

    -- Эффекты при наведении
    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = Library.Colors.ButtonHover
    end)

    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = Library.Colors.Button
    end)

    -- Обработчик клика
    button.MouseButton1Click:Connect(function()
        if callback then
            callback()
        end
    end)

    return button
end

-- Создание переключателя (toggle)
function Library:CreateToggle(parent, text, default, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = "Toggle"
    toggleFrame.Size = UDim2.new(1, 0, 0, 25)
    toggleFrame.BackgroundTransparency = 1
    toggleFrame.Parent = parent

    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(0, 40, 0, 20)
    toggleButton.Position = UDim2.new(1, -40, 0, 0)
    toggleButton.BackgroundColor3 = default and Library.Colors.ToggleOn or Library.Colors.ToggleOff
    toggleButton.BorderColor3 = Library.Colors.Border
    toggleButton.BorderSizePixel = 1
    toggleButton.Text = ""
    toggleButton.Parent = toggleFrame

    local toggleCircle = Instance.new("Frame")
    toggleCircle.Name = "ToggleCircle"
    toggleCircle.Size = UDim2.new(0, 16, 0, 16)
    toggleCircle.Position = UDim2.new(0, default and 20 or 2, 0, 2)
    toggleCircle.BackgroundColor3 = Library.Colors.Text
    toggleCircle.BorderSizePixel = 0
    toggleCircle.Parent = toggleButton

    local toggleText = Instance.new("TextLabel")
    toggleText.Name = "ToggleText"
    toggleText.Size = UDim2.new(1, -50, 1, 0)
    toggleText.BackgroundTransparency = 1
    toggleText.Text = text
    toggleText.TextColor3 = Library.Colors.Text
    toggleText.TextXAlignment = Enum.TextXAlignment.Left
    toggleText.Font = Enum.Font.Gotham
    toggleText.TextSize = 14
    toggleText.Parent = toggleFrame

    local isToggled = default

    -- Функция переключения
    local function toggle()
        isToggled = not isToggled
        toggleButton.BackgroundColor3 = isToggled and Library.Colors.ToggleOn or Library.Colors.ToggleOff
        
        local tween = game:GetService("TweenService"):Create(
            toggleCircle,
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Position = UDim2.new(0, isToggled and 20 or 2, 0, 2)}
        )
        tween:Play()
        
        if callback then
            callback(isToggled)
        end
    end

    toggleButton.MouseButton1Click:Connect(toggle)

    return {
        Frame = toggleFrame,
        Set = function(self, value)
            if isToggled ~= value then
                toggle()
            end
        end,
        Get = function(self)
            return isToggled
        end
    }
end

-- Создание слайдера
function Library:CreateSlider(parent, text, min, max, default, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = "Slider"
    sliderFrame.Size = UDim2.new(1, 0, 0, 50)
    sliderFrame.BackgroundTransparency = 1
    sliderFrame.Parent = parent

    local sliderText = Instance.new("TextLabel")
    sliderText.Name = "SliderText"
    sliderText.Size = UDim2.new(1, 0, 0, 20)
    sliderText.BackgroundTransparency = 1
    sliderText.Text = text
    sliderText.TextColor3 = Library.Colors.Text
    sliderText.TextXAlignment = Enum.TextXAlignment.Left
    sliderText.Font = Enum.Font.Gotham
    sliderText.TextSize = 14
    sliderText.Parent = sliderFrame

    local valueText = Instance.new("TextLabel")
    valueText.Name = "ValueText"
    valueText.Size = UDim2.new(0, 50, 0, 20)
    valueText.Position = UDim2.new(1, -50, 0, 0)
    valueText.BackgroundTransparency = 1
    valueText.Text = tostring(default)
    valueText.TextColor3 = Library.Colors.Text
    valueText.TextXAlignment = Enum.TextXAlignment.Right
    valueText.Font = Enum.Font.Gotham
    valueText.TextSize = 14
    valueText.Parent = sliderFrame

    local track = Instance.new("Frame")
    track.Name = "Track"
    track.Size = UDim2.new(1, 0, 0, 5)
    track.Position = UDim2.new(0, 0, 0, 30)
    track.BackgroundColor3 = Library.Colors.ToggleOff
    track.BorderSizePixel = 0
    track.Parent = sliderFrame

    local fill = Instance.new("Frame")
    fill.Name = "Fill"
    fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    fill.BackgroundColor3 = Library.Colors.ToggleOn
    fill.BorderSizePixel = 0
    fill.Parent = track

    local handle = Instance.new("TextButton")
    handle.Name = "Handle"
    handle.Size = UDim2.new(0, 15, 0, 15)
    handle.Position = UDim2.new((default - min) / (max - min), -7, 0.5, -7)
    handle.BackgroundColor3 = Library.Colors.Text
    handle.BorderSizePixel = 0
    handle.Text = ""
    handle.Parent = track

    local dragging = false
    local currentValue = default

    -- Функция обновления слайдера
    local function updateSlider(input)
        local relativeX = (input.Position.X - track.AbsolutePosition.X) / track.AbsoluteSize.X
        relativeX = math.clamp(relativeX, 0, 1)
        
        currentValue = math.floor(min + (max - min) * relativeX)
        valueText.Text = tostring(currentValue)
        fill.Size = UDim2.new(relativeX, 0, 1, 0)
        handle.Position = UDim2.new(relativeX, -7, 0.5, -7)
        
        if callback then
            callback(currentValue)
        end
    end

    -- Обработчики для слайдера
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            updateSlider(input)
        end
    end)

    handle.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)

    track.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            updateSlider(input)
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            updateSlider(input)
        end
    end)

    return {
        Frame = sliderFrame,
        GetValue = function(self)
            return currentValue
        end,
        SetValue = function(self, value)
            value = math.clamp(value, min, max)
            currentValue = value
            valueText.Text = tostring(value)
            local relativeX = (value - min) / (max - min)
            fill.Size = UDim2.new(relativeX, 0, 1, 0)
            handle.Position = UDim2.new(relativeX, -7, 0.5, -7)
        end
    }
end

-- Создание текстового поля
function Library:CreateTextBox(parent, text, placeholder, callback)
    local textBoxFrame = Instance.new("Frame")
    textBoxFrame.Name = "TextBox"
    textBoxFrame.Size = UDim2.new(1, 0, 0, 35)
    textBoxFrame.BackgroundTransparency = 1
    textBoxFrame.Parent = parent

    local textBox = Instance.new("TextBox")
    textBox.Name = "Input"
    textBox.Size = UDim2.new(1, 0, 1, 0)
    textBox.BackgroundColor3 = Library.Colors.Button
    textBox.BorderColor3 = Library.Colors.Border
    textBox.BorderSizePixel = 1
    textBox.Text = text
    textBox.PlaceholderText = placeholder
    textBox.TextColor3 = Library.Colors.Text
    textBox.Font = Enum.Font.Gotham
    textBox.TextSize = 14
    textBox.TextXAlignment = Enum.TextXAlignment.Left
    textBox.Parent = textBoxFrame

    textBox.FocusLost:Connect(function()
        if callback then
            callback(textBox.Text)
        end
    end)

    return textBox
end

-- Создание метки
function Library:CreateLabel(parent, text)
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, 0, 0, 20)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Library.Colors.Text
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.Parent = parent

    return label
end

return Library
