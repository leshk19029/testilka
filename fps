local FPSDevouverModule = {}
local screenGui = nil
local isSwapping = false
local isRemovingAccessories = true
local swapConnection = nil
local removeConnection = nil

function FPSDevouverModule:Initialize()
    if screenGui then return end

    local player = game:GetService('Players').LocalPlayer
    local RunService = game:GetService('RunService')
    local UserInputService = game:GetService('UserInputService')

    -- Константы
    local PANEL_WIDTH = 200
    local PANEL_HEIGHT = 80
    local BTN_WIDTH = 160
    local BTN_HEIGHT = 40
    local BTN_FONT_SIZE = 14
    local CORNER_RADIUS = 12
    local SWAP_DELAY = 0.03

    -- Сохранение позиции
    local positionKey = "fpsdevouver_window_position"
    local savedPosition

    pcall(function()
        savedPosition = game:GetService("HttpService"):JSONDecode(readfile(positionKey))
    end)

    -- Создаём интерфейс
    screenGui = Instance.new('ScreenGui')
    screenGui.Name = 'FPSDevouverMenu'
    screenGui.Enabled = false
    screenGui.Parent = game:GetService('CoreGui')
    screenGui.ResetOnSpawn = false

    local mainFrame = Instance.new('Frame')
    mainFrame.Size = UDim2.new(0, PANEL_WIDTH, 0, PANEL_HEIGHT)

    -- Устанавливаем сохранённую позицию или позицию по умолчанию
    if savedPosition then
        mainFrame.Position = UDim2.new(
            savedPosition.X.Scale,
            savedPosition.X.Offset,
            savedPosition.Y.Scale,
            savedPosition.Y.Offset
        )
    else
        mainFrame.Position = UDim2.new(0.5, -PANEL_WIDTH / 2, 0.1, 0)
    end

    mainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui

    Instance.new('UICorner', mainFrame).CornerRadius = UDim.new(0, CORNER_RADIUS)

    local title = Instance.new('TextLabel')
    title.Size = UDim2.new(1, 0, 0, 30)
    title.Position = UDim2.new(0, 0, 0, 10)
    title.BackgroundTransparency = 1
    title.Text = 'FPS DEVOUVER'
    title.Font = Enum.Font.GothamBold
    title.TextSize = 16
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Parent = mainFrame

    -- Кнопка Start/Stop
    local mainBtn = Instance.new('TextButton')
    mainBtn.Size = UDim2.new(0, BTN_WIDTH, 0, BTN_HEIGHT)
    mainBtn.Position = UDim2.new(0.5, -BTN_WIDTH / 2, 0, 40)
    mainBtn.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    mainBtn.Font = Enum.Font.GothamBold
    mainBtn.TextSize = BTN_FONT_SIZE
    mainBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    mainBtn.BorderSizePixel = 0
    mainBtn.Parent = mainFrame

    Instance.new('UICorner', mainBtn).CornerRadius = UDim.new(0, 8)

    -- Функция свапа биты
    local function performSingleSwap()
        local character = player.Character
        local backpack = player:FindFirstChild('Backpack')

        if not character or not backpack then
            return
        end

        local batInCharacter = character:FindFirstChild('Bat')
        local batInBackpack = backpack:FindFirstChild('Bat')

        if batInCharacter then
            batInCharacter.Parent = backpack
        elseif batInBackpack then
            batInBackpack.Parent = character
        end
    end

    -- Функция удаления аксессуаров
    local function removeAccessories()
        local players = game.Players:GetPlayers()
        for _, plr in pairs(players) do
            local character = plr.Character
            if character then
                for _, item in pairs(character:GetChildren()) do
                    if item:IsA('Accessory') then
                        item:Destroy()
                    end
                end
            end
        end
    end

    -- Управление циклами
    local function toggleSwapLoop()
        if isSwapping then
            isSwapping = false
            if swapConnection then
                swapConnection:Disconnect()
                swapConnection = nil
            end
        else
            isSwapping = true
            performSingleSwap()

            swapConnection = RunService.Heartbeat:Connect(function()
                if not isSwapping then
                    swapConnection:Disconnect()
                    return
                end
                performSingleSwap()
                task.wait(SWAP_DELAY)
            end)
        end
    end

    -- Запуск цикла удаления аксессуаров
    local function startRemoveAccessoriesLoop()
        if removeConnection then
            removeConnection:Disconnect()
        end
        
        removeConnection = RunService.Heartbeat:Connect(function()
            if not isRemovingAccessories then
                removeConnection:Disconnect()
                return
            end
            removeAccessories()
            task.wait(0.01)
        end)
    end

    -- Функция перетаскивания с сохранением позиции
    local function setupDrag(frame)
        local dragging = false
        local dragStart, startPos

        local function onInputBegan(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart = input.Position
                startPos = frame.Position
            end
        end

        local function onInputChanged(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local delta = input.Position - dragStart
                local newPosition = UDim2.new(
                    startPos.X.Scale,
                    startPos.X.Offset + delta.X,
                    startPos.Y.Scale,
                    startPos.Y.Offset + delta.Y
                )
                frame.Position = newPosition
                
                -- Сохраняем позицию
                savedPosition = {
                    X = {Scale = newPosition.X.Scale, Offset = newPosition.X.Offset},
                    Y = {Scale = newPosition.Y.Scale, Offset = newPosition.Y.Offset}
                }
                
                -- Сохраняем в файл
                pcall(function()
                    writefile(positionKey, game:GetService("HttpService"):JSONEncode(savedPosition))
                end)
            end
        end

        local function onInputEnded(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end

        frame.InputBegan:Connect(onInputBegan)
        frame.InputChanged:Connect(onInputChanged)
        UserInputService.InputChanged:Connect(onInputChanged)
        UserInputService.InputEnded:Connect(onInputEnded)
    end

    -- Обновление текста кнопки
    local function updateButton()
        if isSwapping then
            mainBtn.Text = 'Stop'
            mainBtn.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
        else
            mainBtn.Text = 'Start'
            mainBtn.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
        end
    end

    mainBtn.MouseButton1Click:Connect(function()
        toggleSwapLoop()
        updateButton()
    end)

    -- Настройка перетаскивания
    setupDrag(mainFrame)

    updateButton()
    startRemoveAccessoriesLoop()
end

function FPSDevouverModule:Toggle(state)
    if not screenGui then
        self:Initialize()
    end
    
    screenGui.Enabled = state
    
    if not state then
        -- Останавливаем свап при выключении
        if isSwapping and swapConnection then
            swapConnection:Disconnect()
            swapConnection = nil
            isSwapping = false
        end
    end
end

function FPSDevouverModule:SetEnabled(state)
    self:Toggle(state)
end

return FPSDevouverModule
