local FPSDevouverModule = {}
local screenGui = nil
local isSwapping = false
local isRemovingAccessories = true
local swapConnection = nil
local removeConnection = nil

-- Ключ для сохранения позиции
local positionKey = "fpsdevouver_window_position"

function FPSDevouverModule:Initialize()
    if screenGui then return end

    local player = game:GetService('Players').LocalPlayer
    local RunService = game:GetService('RunService')
    local UserInputService = game:GetService('UserInputService')
    local HttpService = game:GetService('HttpService')

    -- Константы
    local SCALE = 0.7
    local PANEL_WIDTH, PANEL_HEIGHT = math.floor(212 * SCALE), math.floor(90 * SCALE)
    local PANEL_RADIUS = math.floor(13 * SCALE)
    local TITLE_HEIGHT = math.floor(32 * SCALE)
    local BTN_WIDTH = math.floor(0.89 * PANEL_WIDTH)
    local BTN_HEIGHT = math.floor(34 * SCALE)
    local BTN_RADIUS = math.floor(8 * SCALE)
    local BTN_FONT_SIZE = math.floor(17 * SCALE)
    local TITLE_FONT_SIZE = math.floor(19 * SCALE)
    local ICON_SIZE = math.floor(16 * SCALE)
    local BTN_ICON_PAD = math.floor(8 * SCALE)
    local BTN_Y0 = math.floor(38 * SCALE)

    -- Задержки
    local SWAP_DELAY = 0.035

    -- Загрузка сохранённой позиции
    local savedPosition
    if readfile and isfile(positionKey) then
        pcall(function()
            local jsonData = readfile(positionKey)
            savedPosition = HttpService:JSONDecode(jsonData)
        end)
    end

    -- Создаём интерфейс
    screenGui = Instance.new('ScreenGui')
    screenGui.Name = 'FPSDevouverMenu'
    screenGui.Enabled = false
    screenGui.Parent = game:GetService('CoreGui')
    screenGui.ResetOnSpawn = false

    local main = Instance.new('Frame')
    main.Size = UDim2.new(0, PANEL_WIDTH, 0, PANEL_HEIGHT)

    -- Устанавливаем сохранённую позицию или позицию по умолчанию
    if savedPosition then
        main.Position = UDim2.new(
            savedPosition.X.Scale,
            savedPosition.X.Offset,
            savedPosition.Y.Scale,
            savedPosition.Y.Offset
        )
    else
        main.Position = UDim2.new(1, -PANEL_WIDTH - 10, 0, 10)
    end

    main.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
    main.BorderSizePixel = 0
    main.Active = true
    main.Parent = screenGui

    Instance.new('UICorner', main).CornerRadius = UDim.new(0, PANEL_RADIUS)

    local title = Instance.new('TextLabel')
    title.Size = UDim2.new(1, 0, 0, TITLE_HEIGHT)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.Text = 'FPS DEVOURER'
    title.Font = Enum.Font.GothamBlack
    title.TextSize = TITLE_FONT_SIZE
    title.BackgroundTransparency = 1
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextStrokeTransparency = 0.08
    title.TextStrokeColor3 = Color3.fromRGB(220, 220, 220)
    title.Parent = main

    -- Функция удаления аксессуаров
    local function removeAllAccessoriesFromCharacter()
        local character = player.Character
        if not character then return end
        
        for _, item in ipairs(character:GetChildren()) do
            if item:IsA('Accessory') or item:IsA('LayeredClothing') or 
               item:IsA('Shirt') or item:IsA('ShirtGraphic') or 
               item:IsA('Pants') or item:IsA('BodyColors') or 
               item:IsA('CharacterMesh') then
                pcall(function() item:Destroy() end)
            end
        end
    end

    -- Функция свапа биты
    local TOOL_NAME = 'Bat'
    
    local function equipTungBat()
        local character = player.Character
        local backpack = player:FindFirstChild('Backpack')
        if not character or not backpack then return false end
        
        local tool = backpack:FindFirstChild(TOOL_NAME)
        if tool then
            tool.Parent = character
            return true
        end
        return false
    end

    local function unequipTungBat()
        local character = player.Character
        local backpack = player:FindFirstChild('Backpack')
        if not character or not backpack then return false end
        
        local tool = character:FindFirstChild(TOOL_NAME)
        if tool then
            tool.Parent = backpack
            return true
        end
        return false
    end

    -- Управление циклами
    local function toggleSwapLoop()
        if isSwapping then
            isSwapping = false
            if swapConnection then
                swapConnection:Disconnect()
                swapConnection = nil
            end
        else
            isSwapping = true
            
            swapConnection = RunService.Heartbeat:Connect(function()
                if not isSwapping then
                    swapConnection:Disconnect()
                    return
                end
                
                equipTungBat()
                task.wait(SWAP_DELAY)
                unequipTungBat()
                task.wait(SWAP_DELAY)
            end)
        end
    end

    -- Запуск цикла удаления аксессуаров
    local function startRemoveAccessoriesLoop()
        if removeConnection then
            removeConnection:Disconnect()
        end
        
        removeConnection = RunService.Heartbeat:Connect(function()
            if not isRemovingAccessories then
                removeConnection:Disconnect()
                return
            end
            removeAllAccessoriesFromCharacter()
            task.wait(0.1)
        end)
    end

    -- Функция перетаскивания с сохранением позиции
    local function setupDrag(frame)
        local dragging, dragInput, dragStart, startPos
        
        frame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart = input.Position
                startPos = frame.Position
                
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)
        
        frame.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                dragInput = input
            end
        end)
        
        UserInputService.InputChanged:Connect(function(input)
            if dragging and input == dragInput then
                local delta = input.Position - dragStart
                local newPosition = UDim2.new(
                    startPos.X.Scale,
                    startPos.X.Offset + delta.X,
                    startPos.Y.Scale,
                    startPos.Y.Offset + delta.Y
                )
                frame.Position = newPosition
                
                -- Сохраняем позицию
                local positionData = {
                    X = {Scale = newPosition.X.Scale, Offset = newPosition.X.Offset},
                    Y = {Scale = newPosition.Y.Scale, Offset = newPosition.Y.Offset}
                }
                
                if writefile then
                    pcall(function()
                        writefile(positionKey, HttpService:JSONEncode(positionData))
                    end)
                end
            end
        end)
    end

    -- Создаем кнопку
    local btn = Instance.new('TextButton')
    btn.Size = UDim2.new(0, BTN_WIDTH, 0, BTN_HEIGHT)
    btn.Position = UDim2.new(0, math.floor((PANEL_WIDTH - BTN_WIDTH) / 2), 0, BTN_Y0)
    btn.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    btn.Text = 'Start'
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = BTN_FONT_SIZE
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.BorderSizePixel = 0
    btn.AutoButtonColor = false
    btn.Parent = main

    Instance.new('UICorner', btn).CornerRadius = UDim.new(0, BTN_RADIUS)

    -- Обновление текста кнопки
    local function updateButton()
        if isSwapping then
            btn.Text = 'Stop'
            btn.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
        else
            btn.Text = 'Start'
            btn.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
        end
    end

    btn.MouseButton1Click:Connect(function()
        toggleSwapLoop()
        updateButton()
    end)

    -- Настройка перетаскивания
    setupDrag(main)

    updateButton()
    startRemoveAccessoriesLoop()

    -- Обработчики для сброса при смене персонажа
    player.CharacterAdded:Connect(function()
        isSwapping = false
        if swapConnection then
            swapConnection:Disconnect()
            swapConnection = nil
        end
        updateButton()
        task.wait(0.2)
        removeAllAccessoriesFromCharacter()
    end)
end

function FPSDevouverModule:Toggle(state)
    if not screenGui then
        self:Initialize()
    end
    
    screenGui.Enabled = state
    
    if not state then
        -- Останавливаем свап при выключении
        if isSwapping and swapConnection then
            swapConnection:Disconnect()
            swapConnection = nil
            isSwapping = false
            
            -- Обновляем кнопку
            if screenGui and screenGui:FindFirstChild('FPSDevouverMenu') then
                local main = screenGui.FPSDevouverMenu
                local btn = main:FindFirstChildWhichIsA('TextButton')
                if btn then
                    btn.Text = 'Start'
                    btn.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
                end
            end
        end
    end
end

function FPSDevouverModule:SetEnabled(state)
    self:Toggle(state)
end

return FPSDevouverModule
